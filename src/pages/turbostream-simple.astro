---
import Layout from '../layouts/Layout.astro';
import { loadConfig } from '../lib/config/site';

const config = loadConfig();
---

<Layout title="Simple Turbostream Test">
  <div class="container mx-auto px-4 py-8">
    <h1 class="text-4xl font-bold mb-8">Simple Turbostream Test</h1>
    
    <div class="bg-blue-50 border border-blue-200 rounded-lg p-6 mb-8">
      <h2 class="text-2xl font-semibold mb-4">Configuration</h2>
      <p><strong>Handle:</strong> {config.atproto.handle}</p>
      <p><strong>DID:</strong> {config.atproto.did}</p>
      <p class="text-sm text-gray-600 mt-2">Filtering for records from your handle only. Open your browser's developer console (F12) to see detailed logs.</p>
    </div>

    <div class="bg-white border border-gray-200 rounded-lg p-6 mb-8">
      <h2 class="text-2xl font-semibold mb-4">Connection</h2>
      <button id="connect-btn" class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700">
        Connect to Turbostream
      </button>
      <button id="disconnect-btn" class="bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700 ml-2" disabled>
        Disconnect
      </button>
      <div id="status" class="mt-4 p-2 rounded bg-gray-100">
        Status: <span id="status-text">Disconnected</span>
      </div>
    </div>

    <div class="bg-white border border-gray-200 rounded-lg p-6">
      <h2 class="text-2xl font-semibold mb-4">Statistics</h2>
      <div class="space-y-2">
        <div>Records received: <span id="count" class="font-bold">0</span></div>
        <div>Connection status: <span id="connection-status" class="font-bold">Disconnected</span></div>
      </div>
    </div>
  </div>
</Layout>

<script>
  import { TurbostreamClient } from '../lib/atproto/turbostream';

  let client: TurbostreamClient | null = null;
  let recordsCount = 0;

  const connectBtn = document.getElementById('connect-btn') as HTMLButtonElement;
  const disconnectBtn = document.getElementById('disconnect-btn') as HTMLButtonElement;
  const statusText = document.getElementById('status-text') as HTMLSpanElement;
  const countEl = document.getElementById('count') as HTMLSpanElement;
  const connectionStatusEl = document.getElementById('connection-status') as HTMLSpanElement;

  function updateStatus(status: string) {
    statusText.textContent = status;
    connectionStatusEl.textContent = status;
    console.log('🔄 Status updated:', status);
    
    if (status === 'connected') {
      connectBtn.disabled = true;
      disconnectBtn.disabled = false;
    } else {
      connectBtn.disabled = false;
      disconnectBtn.disabled = true;
    }
  }

  connectBtn.addEventListener('click', async () => {
    console.log('🚀 Starting Turbostream connection...');
    updateStatus('connecting');
    
    try {
      client = new TurbostreamClient();
      
      client.onConnect(() => {
        console.log('🎉 Turbostream connected successfully!');
        updateStatus('connected');
      });

      client.onDisconnect(() => {
        console.log('👋 Turbostream disconnected');
        updateStatus('disconnected');
      });

      client.onError((error) => {
        console.error('💥 Turbostream error:', error);
        updateStatus('error');
      });

      client.onRecord((record) => {
        recordsCount++;
        countEl.textContent = recordsCount.toString();
        console.log('📝 Record received:', record);
      });

      await client.connect();
      
    } catch (error) {
      console.error('💥 Failed to connect:', error);
      updateStatus('error');
    }
  });

  disconnectBtn.addEventListener('click', () => {
    if (client) {
      console.log('🔌 Disconnecting...');
      client.disconnect();
      client = null;
    }
  });

  // Log when page loads
  console.log('📄 Simple Turbostream test page loaded');
</script> 