---
import Layout from '../layouts/Layout.astro';
import { AtprotoBrowser } from '../lib/atproto/atproto-browser';
import { loadConfig } from '../lib/config/site';

const config = loadConfig();
const browser = new AtprotoBrowser();

let repoInfo = null;
let collections = [];
let grainRecords = [];
let error = null;

try {
  if (config.atproto.handle && config.atproto.handle !== 'your-handle-here') {
    // Get repository info
    repoInfo = await browser.getRepoInfo(config.atproto.handle);
    
    if (repoInfo) {
      // Get all collections
      collections = repoInfo.collections;
      
      // Get records from grain-related collections
      const grainCollections = collections.filter(col => 
        col.includes('grain') || col.includes('social.grain')
      );
      
      for (const collection of grainCollections) {
        const records = await browser.getCollectionRecords(config.atproto.handle, collection, 50);
        if (records && records.records) {
          grainRecords.push({
            collection,
            records: records.records
          });
        }
      }
    }
  }
} catch (err) {
  error = err;
  console.error('Gallery debug: Error:', err);
}
---

<Layout title="Gallery Debug">
  <div class="container mx-auto px-4 py-8">
    <header class="text-center mb-12">
      <h1 class="text-4xl font-bold text-gray-900 dark:text-white mb-4">
        Gallery Structure Debug
      </h1>
      <p class="text-xl text-gray-600 dark:text-gray-400 max-w-2xl mx-auto">
        Examining Grain.social collection structure and relationships
      </p>
    </header>

    <main class="max-w-6xl mx-auto space-y-8">
      {error ? (
        <div class="bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg p-8">
          <h3 class="text-xl font-semibold text-red-800 dark:text-red-200 mb-4">
            Error
          </h3>
          <p class="text-red-700 dark:text-red-300 mb-4">
            {error instanceof Error ? error.message : String(error)}
          </p>
        </div>
      ) : repoInfo ? (
        <>
          <div class="bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-6">
            <h3 class="text-lg font-semibold text-blue-800 dark:text-blue-200 mb-2">
              Repository Info
            </h3>
            <div class="text-sm text-blue-700 dark:text-blue-300">
              <p><strong>Handle:</strong> {repoInfo.handle}</p>
              <p><strong>DID:</strong> {repoInfo.did}</p>
              <p><strong>Total Collections:</strong> {collections.length}</p>
              <p><strong>Total Records:</strong> {repoInfo.recordCount}</p>
            </div>
          </div>

          <div class="bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg p-6">
            <h3 class="text-lg font-semibold text-green-800 dark:text-green-200 mb-2">
              All Collections
            </h3>
            <div class="text-sm text-green-700 dark:text-green-300">
              <ul class="list-disc list-inside space-y-1">
                {collections.map((collection) => (
                  <li class="bg-green-100 dark:bg-green-800 px-2 py-1 rounded">
                    {collection}
                  </li>
                ))}
              </ul>
            </div>
          </div>

          <div class="bg-purple-50 dark:bg-purple-900/20 border border-purple-200 dark:border-purple-800 rounded-lg p-6">
            <h3 class="text-lg font-semibold text-purple-800 dark:text-purple-200 mb-2">
              Grain.social Records
            </h3>
            <div class="text-sm text-purple-700 dark:text-purple-300">
              {grainRecords.map(({ collection, records }) => (
                <div class="mb-6">
                  <h4 class="font-semibold mb-2">{collection} ({records.length} records)</h4>
                  <div class="space-y-2">
                    {records.slice(0, 5).map((record, index) => (
                      <div class="bg-purple-100 dark:bg-purple-800 p-3 rounded">
                        <div class="flex justify-between items-start">
                          <div>
                            <p class="font-semibold">Record {index + 1}</p>
                            <p class="text-xs">URI: {record.uri}</p>
                            <p class="text-xs">$type: {record.value?.$type || 'unknown'}</p>
                            <p class="text-xs">Created: {record.value?.createdAt || record.indexedAt}</p>
                          </div>
                          <div class="text-right text-xs">
                            <p>CID: {record.cid.substring(0, 10)}...</p>
                          </div>
                        </div>
                        <details class="mt-2">
                          <summary class="cursor-pointer text-xs">View Record Data</summary>
                          <pre class="text-xs bg-purple-200 dark:bg-purple-700 p-2 rounded mt-1 overflow-x-auto">
{JSON.stringify(record.value, null, 2)}
                          </pre>
                        </details>
                      </div>
                    ))}
                    {records.length > 5 && (
                      <p class="text-xs italic">... and {records.length - 5} more records</p>
                    )}
                  </div>
                </div>
              ))}
            </div>
          </div>
        </>
      ) : (
        <div class="text-center py-12">
          <div class="bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-lg p-8">
            <h3 class="text-xl font-semibold text-yellow-800 dark:text-yellow-200 mb-4">
              Configuration Required
            </h3>
            <p class="text-yellow-700 dark:text-yellow-300 mb-4">
              To debug the gallery structure, please configure your Bluesky handle in the environment variables.
            </p>
          </div>
        </div>
      )}
    </main>
  </div>
</Layout> 