---
import type { GrainImageGallery } from '../../lib/types/atproto';

interface Props {
  gallery: GrainImageGallery;
  showDescription?: boolean;
  showTimestamp?: boolean;
  columns?: number;
}

const { gallery, showDescription = true, showTimestamp = true, columns = 3 } = Astro.props;

const formatDate = (dateString: string) => {
  return new Date(dateString).toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  });
};

const gridCols = {
  1: 'grid-cols-1',
  2: 'grid-cols-2',
  3: 'grid-cols-3',
  4: 'grid-cols-4',
  5: 'grid-cols-5',
  6: 'grid-cols-6',
}[columns] || 'grid-cols-3';
---

<article class="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6 mb-6">
  <header class="mb-4">
    <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-2">
      {gallery.title}
    </h2>
    
    {showDescription && gallery.description && (
      <div class="text-gray-600 dark:text-gray-400 mb-3">
        {gallery.description}
      </div>
    )}
    
    {showTimestamp && (
      <div class="text-sm text-gray-500 dark:text-gray-400 mb-4">
        Created on {formatDate(gallery.createdAt)}
      </div>
    )}
  </header>
  
  {gallery.images && gallery.images.length > 0 && (
    <div class={`grid ${gridCols} gap-4`}>
      {gallery.images.map((image) => (
        <div class="relative group">
          <img 
            src={image.url} 
            alt={image.alt || 'Gallery image'} 
            class="w-full h-48 object-cover rounded-lg transition-transform duration-200 group-hover:scale-105"
          />
          {image.alt && (
            <div class="absolute bottom-0 left-0 right-0 bg-black bg-opacity-50 text-white text-sm p-2 rounded-b-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200">
              {image.alt}
            </div>
          )}
        </div>
      ))}
    </div>
  )}
</article> 