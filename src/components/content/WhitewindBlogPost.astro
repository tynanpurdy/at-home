---
import type { WhitewindBlogPost } from '../../lib/types/atproto';
import { marked } from 'marked';

interface Props {
  post: WhitewindBlogPost;
  showTags?: boolean;
  showTimestamp?: boolean;
}

const { post, showTags = true, showTimestamp = true } = Astro.props;

const formatDate = (dateString: string) => {
  return new Date(dateString).toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  });
};

// Prefer explicit publishedAt; fall back to createdAt or indexedAt if present
const publishedRaw = (post as any).publishedAt || (post as any).createdAt || (post as any).indexedAt || null;
const publishedSafe = publishedRaw && !isNaN(new Date(publishedRaw).getTime()) ? publishedRaw : null;
---

<article class="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6 mb-6">
  <header class="mb-4">
    <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-2">
      {post.title}
    </h2>
    
    {showTimestamp && publishedSafe && (
      <div class="text-sm text-gray-500 dark:text-gray-400 mb-3">
        Published on {formatDate(publishedSafe)}
      </div>
    )}
    
    {showTags && post.tags && post.tags.length > 0 && (
      <div class="flex flex-wrap gap-2 mb-4">
        {post.tags.map((tag) => (
          <span class="px-2 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 text-xs rounded-full">
            #{tag}
          </span>
        ))}
      </div>
    )}
  </header>
  
  <div class="prose prose-white dark:prose-invert max-w-none">
    <Fragment set:html={await marked(post.content || '')} />
  </div>
</article> 